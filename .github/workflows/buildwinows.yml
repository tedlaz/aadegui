name: Build pyside6 application for Windows

on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pyside6 pyinstaller

      - name: Build application
        run: |
          pyinstaller --onefile --noconsole --name MyApp main.py

      - name: Create release
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { Octokit } = require('@octokit/rest');
            const { createRelease } = require('@actions/github');
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            const { owner, repo } = context.repo;
            const tag_name = 'v1.0.0';
            const release_name = 'MyApp v1.0.0';
            const response = await octokit.repos.createRelease({
              owner,
              repo,
              tag_name,
              name: release_name,
              body: 'Release notes',
              draft: false,
              prerelease: false,
            });
            const release_id = response.data.id;
            const artifact_name = 'MyApp.exe';
            const artifact_path = './dist/MyApp.exe';
            const upload_url = response.data.upload_url;
            const upload_response = await octokit.repos.uploadReleaseAsset({
              url: upload_url,
              headers: {
                'content-type': 'application/octet-stream',
                'content-length': require('fs').statSync(artifact_path).size
              },
              name: artifact_name,
              data: require('fs').readFileSync(artifact_path)
            });
            console.log(`Artifact uploaded: ${upload_response.data.browser_download_url}`);
